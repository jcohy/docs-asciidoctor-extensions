plugins {
	id 'java-library'
	id 'maven-publish'
	id 'signing'
}


group = GROUPID
version = VERSION

ext {
	set('signing.keyId',System.getenv('signing.keyId'))
	set('signing.password',System.getenv('signing.password'))
	set('signing.secretKeyRingFile',System.getenv('signing.secretKeyRingFile'))
	set('deployUsername',System.getenv('NEXUS_OSS_USER_NAME'))
	set('deployPassword',System.getenv('NEXUS_OSS_PASS_WORD'))
}
repositories {
	maven{
		url("https://maven.aliyun.com/repository/central")
	}
	mavenCentral()
}

java {
	withJavadocJar()
	withSourcesJar()
}

dependencies {
	compile("commons-io:commons-io:2.5")
	compile("org.asciidoctor:asciidoctorj:2.4.2")
	compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
	testCompile "junit:junit:4.12"
	testCompile("org.junit.jupiter:junit-jupiter-api:5.6.2")
	testCompile("org.spockframework:spock-core:0.7-groovy-2.0") {
		exclude group: 'org.hamcrest', module: 'hamcrest-core'
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = ARTIFACTID
			from components.java
			pom {
				afterEvaluate {
					name = POM_NAME
					description = POM_DESCRIPTION
				}
				url = GIT_URL
				organization {
					name = POM_ORGANIZATION_NAME
					url = POM_ORGANIZATION_URL
				}
				licenses {
					license {
						name = LICENSE_NAME
						url = LICENSE_URL
						distribution = DEVELOPER_NAME
					}
				}
				scm {
					url = GIT_URL
					connection = GIT_SCM_CONNECTION
					developerConnection = GIT_SCM_DEVELOPE_CONNECTION
				}
				developers {
					developer {
						id = DEVELOPER_NAME
						name = DEVELOPER_NAME
						email = DEVELOPER_EMAIL
					}
				}
				issueManagement {
					system = ISSUE_SYSTEM
					url = ISSUE_URL
				}
			}
			versionMapping {
				usage('java-api') {
					fromResolutionResult()
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
	repositories {
		maven {
			credentials {
				username deployUsername
				password deployPassword
			}
			url version.endsWith('SNAPSHOT') ? REPOSITORY_URL_SNAPSHOT : REPOSITORY_URL_RELEASE
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}


javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}